@model IEnumerable<ProjIntegrador.Models.Produto>

<div class="app-main__outer">
    <div class="app-main__inner">
        <div class="app-page-title">
            <div class="page-title-wrapper">
                <div class="page-title-heading">
                    <div>
                        Home
                        <div class="page-title-subheading">
                            This is an example dashboard created using build-in elements and components.
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="card border-primary mb-3" style="width: 18%; margin-right: 2%;">
                    @*@if (item.ImagemProdudo != null)
                    {
                        @{
                            var base64 = Convert.ToBase64String(item.ImagemProdudo).ToString();
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        }
                        <img src='@imgSrc' style="max-width:100px; max-height:100px;" />
                    }*@
                    <img class="card-img-top" src="..." alt="Card image cap">
                    @if (item.Status == ProjIntegrador.Models.StatusEnum.Inativo)
                    {
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Descricao)</h5>
                            <p>Produto Indisponível</p>
                        </div>
                        <div class="card-footer">
                            <a href="#" class="btn btn-primary">Me avise</a>
                        </div>
                    }
                    else
                    {
                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Descricao)</h5>
                            <p class="card-text">@Html.DisplayFor(modelItem => item.DetalheProduto)</p>
                        </div>
                        <div class="card-footer">
                            <a href="#" class="btn btn-primary">Saber Mais</a>
                        </div>
                    }
                </div>

                @*<div class="col-md-3 mb-3">
                        <div class="card">
                            <img class="card-img-top" src=".../100px180/" alt="Imagem de capa do card">

                            @if (item.Status == ProjIntegrador.Models.StatusEnum.Inativo)
                            {
                                <div class="card-body">
                                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Descricao)</h5>
                                    <p>Produto Indisponível</p>
                                </div>
                                <div class="card-footer">
                                    <a href="#" class="btn btn-primary">Me avise</a>
                                </div>
                            }
                            else
                            {
                                <div class="card-body">
                                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Descricao)</h5>
                                    <p class="card-text">Este é um card maior com suporte a texto embaixo, que funciona como uma introdução a um conteúdo adicional. Este conteúdo é um pouco maior, para demonstração.</p>
                                </div>
                                <div class="card-footer">
                                    <a href="#" class="btn btn-primary">Saber Mais</a>
                                </div>
                            }

                        </div>
                    </div>*@



            }
        </div>
    </div>
</div>